syntax = "proto3";

package auth;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

import "google/api/annotations.proto";
import "google/api/http.proto";

import "buf/validate/validate.proto";

option go_package = "github.com/tclutin/article-alchemy-service-protos/gen/go/auth;authpb";

service AuthService {
  rpc SignUp(RegisterRequest) returns (TokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/signup"
      body: "*"
    };
  }

  rpc LogIn(LoginRequest) returns (TokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/login"
      body: "*"
    };
  }

  rpc RefreshToken(RefreshTokenRequest) returns (TokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/refresh"
      body: "*"
    };
  }

  rpc GetUserInfo(google.protobuf.Empty) returns (GetUserInfoResponse) {
    option (google.api.http) = {
      get: "/api/v1/auth/me"
    };
  }

  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/logout"
      body: "*"
    };
  }
}

message RegisterRequest {
  string email = 1 [(buf.validate.field).cel = {
    id: "valid_email"
    message: "email must be a valid email"
    expression: "this.isEmail()"
  }];
  string username = 2;
  string password = 3;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message TokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message GetUserInfoResponse {
  uint64 user_id = 1;
  string username = 2;
  string email = 3;
  bool is_active = 4;
  string password = 5;
  google.protobuf.Timestamp created_at = 6;
}

message LogoutRequest {
  string refresh_token = 1;
}

message LogoutResponse {
  string message = 1;
}