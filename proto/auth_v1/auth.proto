syntax = "proto3";

package auth_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/tclutin/article-alchemy-service-protos/gen/go/auth_v1;auth_v1";

service AuthService {
  rpc SignUp(RegisterRequest) returns (TokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/signup"
      body: "*"
    };
  }

  rpc LogIn(LoginRequest) returns (TokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/login"
      body: "*"
    };
  }

  rpc RefreshToken(RefreshTokenRequest) returns (TokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/refresh"
      body: "*"
    };
  }

  rpc GetUserInfo(google.protobuf.Empty) returns (GetUserInfoResponse) {
    option (google.api.http) = {
      get: "/api/v1/auth/me"
    };
  }

  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/logout"
      body: "*"
    };
  }
}

message RegisterRequest {
  string email = 1 [
    (validate.rules).string = {
      email: true,
      min_len: 5,
      max_len: 255
    }
  ];

  string username = 2 [
    (validate.rules).string = {
      min_len: 3,
      max_len: 50,
      pattern: "^[a-zA-Z0-9_]+$"
    }
  ];

  string password = 3 [
    (validate.rules).string = {
      min_len: 8,
      max_len: 64,
      pattern: "^[A-Za-z0-9#?!@$%^&*-]{8,}$"
    }
  ];
}

message LoginRequest {
  string email = 1 [
    (validate.rules).string = {
      email: true,
      min_len: 5,
      max_len: 255
    }
  ];

  string password = 2 [
    (validate.rules).string = {
      min_len: 8,
      max_len: 64
    }
  ];
}

message RefreshTokenRequest {
  string refresh_token = 1 [
    (validate.rules).string = {
      min_len: 32,
      max_len: 512
    }
  ];
}

message TokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message GetUserInfoResponse {
  uint64 user_id = 1;
  string username = 2;
  string email = 3;
  bool is_active = 4;
  string password = 5;
  google.protobuf.Timestamp created_at = 6;
}

message LogoutRequest {
  string refresh_token = 1 [
    (validate.rules).string = {
      min_len: 32,
      max_len: 512
    }
  ];
}

message LogoutResponse {
  string message = 1;
}